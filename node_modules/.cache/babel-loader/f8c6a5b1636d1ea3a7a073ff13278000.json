{"ast":null,"code":"'use strict';\n\nvar assign = require(\"react/lib/Object.assign\");\n\nvar recalcMediaQueryStyles = require('./recalcMediaQueryStyles');\n\nvar matchMedia = null;\n\nif (typeof window !== 'undefined' && !window.__ReactStyle__) {\n  matchMedia = window.matchMedia;\n}\n\nvar mediaQueryBreakPoints = {};\nvar hasVisibilityChangeListener = false;\n\nfunction applyMediaQueries(registeredMediaQueries, stylesheet, register) {\n  var newStyleSheet = {};\n  var styleNames = Object.keys(stylesheet);\n\n  function recalc() {\n    recalcMediaQueryStyles(registeredMediaQueries);\n  }\n\n  if (!hasVisibilityChangeListener && typeof document !== 'undefined' && 'visibilityState' in document) {\n    hasVisibilityChangeListener = true;\n    document.addEventListener(\"visibilitychange\", function () {\n      if (document.visibilityState === 'visible') {\n        recalc();\n      }\n    });\n  }\n\n  for (var i = 0, l = styleNames.length; i < l; i++) {\n    var styleName = styleNames[i];\n    var style = stylesheet[styleName]; // only position 0 = false, so !0 = true\n\n    if (!styleName.indexOf('@media')) {\n      var mediaQuery = styleName.substr('@media '.length);\n      var isMediaQueryActive = false;\n\n      if (matchMedia && matchMedia(mediaQuery).matches) {\n        isMediaQueryActive = true;\n        var mqStyleNames = Object.keys(style);\n\n        for (var j = 0, l2 = mqStyleNames.length; j < l2; j++) {\n          var mqStyleName = mqStyleNames[j]; // warn for undeclared block\n\n          if (\"production\" !== process.env.NODE_ENV) {\n            if (!stylesheet[mqStyleName]) {\n              console.warn('Media query \\'' + styleName + '\\' referred to undeclared style block \\'' + mqStyleName + '\\'.');\n              continue;\n            }\n          }\n\n          newStyleSheet[mqStyleName] = assign({}, newStyleSheet[mqStyleName], style[mqStyleName]);\n        }\n      } // register media query for recalc\n\n\n      if (register) {\n        registeredMediaQueries.push({\n          compiled: newStyleSheet,\n          elements: [],\n          isActive: isMediaQueryActive,\n          query: mediaQuery,\n          styleNames: styleNames,\n          stylesheet: stylesheet\n        });\n\n        if (matchMedia && !mediaQueryBreakPoints[mediaQuery]) {\n          matchMedia(mediaQuery).addListener(recalc);\n          mediaQueryBreakPoints[mediaQuery] = true;\n        }\n      }\n    } else {\n      newStyleSheet[styleName] = style;\n    }\n  }\n\n  return newStyleSheet;\n}\n\nmodule.exports = applyMediaQueries;","map":{"version":3,"sources":["C:/Users/Acer/WebstormProjects/bhumika/node_modules/react-style/lib/applyMediaQueries.js"],"names":["assign","require","recalcMediaQueryStyles","matchMedia","window","__ReactStyle__","mediaQueryBreakPoints","hasVisibilityChangeListener","applyMediaQueries","registeredMediaQueries","stylesheet","register","newStyleSheet","styleNames","Object","keys","recalc","document","addEventListener","visibilityState","i","l","length","styleName","style","indexOf","mediaQuery","substr","isMediaQueryActive","matches","mqStyleNames","j","l2","mqStyleName","process","env","NODE_ENV","console","warn","push","compiled","elements","isActive","query","addListener","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar assign                 = require(\"react/lib/Object.assign\");\nvar recalcMediaQueryStyles = require('./recalcMediaQueryStyles');\n\nvar matchMedia = null;\nif (typeof window !== 'undefined' && !window.__ReactStyle__) {\n  matchMedia = window.matchMedia;\n}\nvar mediaQueryBreakPoints = {};\nvar hasVisibilityChangeListener = false;\n\nfunction applyMediaQueries(registeredMediaQueries, stylesheet, register) {\n  var newStyleSheet = {};\n  var styleNames = Object.keys(stylesheet);\n\n  function recalc() {\n    recalcMediaQueryStyles(registeredMediaQueries);\n  }\n\n  if (!hasVisibilityChangeListener\n      && typeof document !== 'undefined'\n      && 'visibilityState' in document) {\n    hasVisibilityChangeListener = true;\n    document.addEventListener(\"visibilitychange\", function() {\n      if (document.visibilityState === 'visible') {\n        recalc();\n      }\n    });\n  }\n\n  for (var i = 0, l = styleNames.length; i < l; i++) {\n    var styleName = styleNames[i];\n    var style = stylesheet[styleName];\n    // only position 0 = false, so !0 = true\n    if (!styleName.indexOf('@media')) {\n      var mediaQuery = styleName.substr('@media '.length);\n      var isMediaQueryActive = false;\n\n      if (matchMedia && matchMedia(mediaQuery).matches) {\n        isMediaQueryActive = true;\n        var mqStyleNames = Object.keys(style);\n        for (var j = 0, l2 = mqStyleNames.length; j < l2; j++) {\n          var mqStyleName = mqStyleNames[j];\n\n          // warn for undeclared block\n          if (\"production\" !== process.env.NODE_ENV) {\n            if (!stylesheet[mqStyleName]) {\n              console.warn('Media query \\'' + styleName + '\\' referred to undeclared style block \\'' + mqStyleName + '\\'.');\n              continue;\n            }\n          }\n          newStyleSheet[mqStyleName] = assign({}, newStyleSheet[mqStyleName], style[mqStyleName]);\n        }\n      }\n\n      // register media query for recalc\n      if (register) {\n        registeredMediaQueries.push({\n          compiled: newStyleSheet,\n          elements: [],\n          isActive: isMediaQueryActive,\n          query: mediaQuery,\n          styleNames: styleNames,\n          stylesheet: stylesheet\n        });\n\n        if (matchMedia && !mediaQueryBreakPoints[mediaQuery]) {\n          matchMedia(mediaQuery).addListener(recalc);\n          mediaQueryBreakPoints[mediaQuery] = true;\n        }\n      }\n    }\n    else {\n      newStyleSheet[styleName] = style;\n    }\n  }\n\n  return newStyleSheet;\n}\n\n\nmodule.exports = applyMediaQueries;\n"]},"metadata":{},"sourceType":"script"}