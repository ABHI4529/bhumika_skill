{"ast":null,"code":"'use strict';\n\nvar CSSProperty = require('react/lib/CSSProperty');\n\nvar isArray = Array.isArray;\nvar keys = Object.keys;\nvar COMPLEX_OVERRIDES = CSSProperty.shorthandPropertyExpansions;\n\nfunction applyClassName(props, className, order, maxOverridesLength) {\n  if (!props.className) {\n    props.className = '';\n  }\n\n  var length = !maxOverridesLength || order + 1 <= maxOverridesLength ? order + 1 : maxOverridesLength;\n  var uniquePartSplit = className.split('_');\n  var unique = uniquePartSplit[uniquePartSplit.length - 1];\n\n  for (var j = 0; j < length; j++) {\n    var selector = j === 0 ? className : unique;\n    props.className += ' ' + selector + (j === 0 ? '' : j);\n  }\n\n  return order + 1;\n}\n\nfunction applyInlineStyle(props, style, order) {\n  if (!props.style) {\n    props.style = {};\n  }\n\n  var styleKeys = keys(style);\n\n  for (var i = 0, l = styleKeys.length; i < l; i++) {\n    var key = styleKeys[i];\n    props.style[key] = style[key];\n    applyOverrides(props, key);\n  }\n\n  return order;\n}\n\nfunction applyOverrides(props, key) {\n  var overrides = COMPLEX_OVERRIDES[key];\n\n  if (overrides) {\n    var overridesKeys = keys(overrides);\n\n    for (var i = 0, l = overridesKeys.length; i < l; i++) {\n      var overrideKey = overridesKeys[i];\n      props.style[overrideKey] = '';\n    }\n  }\n}\n\nfunction applyStyle(props, style, order, maxOverridesLength) {\n  if (style === null || style === undefined || style === false) {\n    return order;\n  } else if (typeof style === 'string' && order < 10) {\n    return applyClassName(props, style, order, maxOverridesLength);\n  } else {\n    return applyInlineStyle(props, style, order);\n  }\n}\n\nfunction applyStyles(props, styles, order, inline, maxOverridesLength) {\n  if (order === undefined) {\n    order = 0;\n    inline = false;\n  }\n\n  if (isArray(styles)) {\n    for (var i = 0, len = styles.length; i < len; i++) {\n      var style = styles[i];\n\n      if (\"production\" !== process.env.NODE_ENV && style) {\n        if (typeof style === 'object' && !Array.isArray(style)) {\n          inline = true;\n        } else if (inline && typeof style === 'string') {\n          console.warn('You are trying to override inline styles with a ' + 'class, which might cause issues due to classes ' + 'having lower CSS specificity then inline styles.');\n        }\n      }\n\n      order = applyStyles(props, style, order, inline, maxOverridesLength);\n    }\n\n    return order;\n  } else {\n    return applyStyle(props, styles, order, maxOverridesLength);\n  }\n}\n\nmodule.exports = applyStyles;","map":{"version":3,"sources":["C:/Users/Acer/WebstormProjects/bhumika/node_modules/react-style/lib/applyStyles.js"],"names":["CSSProperty","require","isArray","Array","keys","Object","COMPLEX_OVERRIDES","shorthandPropertyExpansions","applyClassName","props","className","order","maxOverridesLength","length","uniquePartSplit","split","unique","j","selector","applyInlineStyle","style","styleKeys","i","l","key","applyOverrides","overrides","overridesKeys","overrideKey","applyStyle","undefined","applyStyles","styles","inline","len","process","env","NODE_ENV","console","warn","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar CSSProperty = require('react/lib/CSSProperty');\nvar isArray     = Array.isArray;\nvar keys        = Object.keys;\n\nvar COMPLEX_OVERRIDES = CSSProperty.shorthandPropertyExpansions;\n\nfunction applyClassName(props, className, order, maxOverridesLength) {\n  if (!props.className) {\n    props.className = '';\n  }\n  var length = !maxOverridesLength || (order + 1) <= maxOverridesLength ? order + 1 : maxOverridesLength;\n  var uniquePartSplit = className.split('_');\n  var unique = uniquePartSplit[uniquePartSplit.length - 1];\n  for (var j = 0; j < length; j++) {\n    var selector = j === 0 ? className : unique;\n    props.className += ' ' + selector + (j === 0 ? '' : j);\n  }\n\n  return order + 1;\n}\n\nfunction applyInlineStyle(props, style, order) {\n  if (!props.style) {\n    props.style = {};\n  }\n  var styleKeys = keys(style);\n  for (var i = 0, l = styleKeys.length; i < l; i++) {\n    var key = styleKeys[i];\n    props.style[key] = style[key];\n    applyOverrides(props, key);\n  }\n\n  return order;\n}\n\nfunction applyOverrides(props, key) {\n  var overrides = COMPLEX_OVERRIDES[key];\n  if (overrides) {\n    var overridesKeys = keys(overrides);\n    for (var i = 0, l = overridesKeys.length; i < l; i++) {\n      var overrideKey = overridesKeys[i];\n      props.style[overrideKey] = '';\n    }\n  }\n}\n\nfunction applyStyle(props, style, order, maxOverridesLength) {\n  if (style === null || style === undefined || style === false) {\n    return order;\n  }\n  else if (typeof style === 'string' && order < 10) {\n    return applyClassName(props, style, order, maxOverridesLength);\n  }\n  else {\n    return applyInlineStyle(props, style, order);\n  }\n}\n\nfunction applyStyles(props, styles, order, inline, maxOverridesLength) {\n  if (order === undefined) {\n    order = 0;\n    inline = false;\n  }\n\n  if (isArray(styles)) {\n    for (var i = 0, len = styles.length; i < len; i++) {\n      var style = styles[i];\n      if (\"production\" !== process.env.NODE_ENV && style) {\n        if (typeof style === 'object' && !Array.isArray(style)) {\n          inline = true;\n        }\n        else if (inline && typeof style === 'string') {\n          console.warn('You are trying to override inline styles with a ' +\n                       'class, which might cause issues due to classes ' +\n                       'having lower CSS specificity then inline styles.');\n        }\n      }\n      order = applyStyles(props, style, order, inline, maxOverridesLength);\n    }\n    return order;\n  }\n  else {\n    return applyStyle(props, styles, order, maxOverridesLength);\n  }\n}\n\nmodule.exports = applyStyles;\n"]},"metadata":{},"sourceType":"script"}